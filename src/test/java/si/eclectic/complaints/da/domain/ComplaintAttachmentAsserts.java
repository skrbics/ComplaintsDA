package si.eclectic.complaints.da.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ComplaintAttachmentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertComplaintAttachmentAllPropertiesEquals(ComplaintAttachment expected, ComplaintAttachment actual) {
        assertComplaintAttachmentAutoGeneratedPropertiesEquals(expected, actual);
        assertComplaintAttachmentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertComplaintAttachmentAllUpdatablePropertiesEquals(ComplaintAttachment expected, ComplaintAttachment actual) {
        assertComplaintAttachmentUpdatableFieldsEquals(expected, actual);
        assertComplaintAttachmentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertComplaintAttachmentAutoGeneratedPropertiesEquals(ComplaintAttachment expected, ComplaintAttachment actual) {
        assertThat(expected)
            .as("Verify ComplaintAttachment auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertComplaintAttachmentUpdatableFieldsEquals(ComplaintAttachment expected, ComplaintAttachment actual) {
        assertThat(expected)
            .as("Verify ComplaintAttachment relevant properties")
            .satisfies(e -> assertThat(e.getOrdinalNo()).as("check ordinalNo").isEqualTo(actual.getOrdinalNo()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getPath()).as("check path").isEqualTo(actual.getPath()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertComplaintAttachmentUpdatableRelationshipsEquals(ComplaintAttachment expected, ComplaintAttachment actual) {
        assertThat(expected)
            .as("Verify ComplaintAttachment relationships")
            .satisfies(e -> assertThat(e.getComplaint()).as("check complaint").isEqualTo(actual.getComplaint()))
            .satisfies(e -> assertThat(e.getCbAttachmentType()).as("check cbAttachmentType").isEqualTo(actual.getCbAttachmentType()));
    }
}
