package si.eclectic.complaints.da.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CbComplaintTypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCbComplaintTypeAllPropertiesEquals(CbComplaintType expected, CbComplaintType actual) {
        assertCbComplaintTypeAutoGeneratedPropertiesEquals(expected, actual);
        assertCbComplaintTypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCbComplaintTypeAllUpdatablePropertiesEquals(CbComplaintType expected, CbComplaintType actual) {
        assertCbComplaintTypeUpdatableFieldsEquals(expected, actual);
        assertCbComplaintTypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCbComplaintTypeAutoGeneratedPropertiesEquals(CbComplaintType expected, CbComplaintType actual) {
        assertThat(expected)
            .as("Verify CbComplaintType auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCbComplaintTypeUpdatableFieldsEquals(CbComplaintType expected, CbComplaintType actual) {
        assertThat(expected)
            .as("Verify CbComplaintType relevant properties")
            .satisfies(e -> assertThat(e.getComplaintTypeName()).as("check complaintTypeName").isEqualTo(actual.getComplaintTypeName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCbComplaintTypeUpdatableRelationshipsEquals(CbComplaintType expected, CbComplaintType actual) {}
}
