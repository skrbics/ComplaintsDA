package si.eclectic.complaints.da.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CbComplaintSubFieldAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCbComplaintSubFieldAllPropertiesEquals(CbComplaintSubField expected, CbComplaintSubField actual) {
        assertCbComplaintSubFieldAutoGeneratedPropertiesEquals(expected, actual);
        assertCbComplaintSubFieldAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCbComplaintSubFieldAllUpdatablePropertiesEquals(CbComplaintSubField expected, CbComplaintSubField actual) {
        assertCbComplaintSubFieldUpdatableFieldsEquals(expected, actual);
        assertCbComplaintSubFieldUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCbComplaintSubFieldAutoGeneratedPropertiesEquals(CbComplaintSubField expected, CbComplaintSubField actual) {
        assertThat(expected)
            .as("Verify CbComplaintSubField auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCbComplaintSubFieldUpdatableFieldsEquals(CbComplaintSubField expected, CbComplaintSubField actual) {
        assertThat(expected)
            .as("Verify CbComplaintSubField relevant properties")
            .satisfies(
                e -> assertThat(e.getComplaintSubFieldName()).as("check complaintSubFieldName").isEqualTo(actual.getComplaintSubFieldName())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCbComplaintSubFieldUpdatableRelationshipsEquals(CbComplaintSubField expected, CbComplaintSubField actual) {}
}
